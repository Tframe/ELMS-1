{"version":3,"sources":["components/Navbar.component.js","components/Footer.component.js","components/vehicle_status/VehicleRow.component.js","components/vehicle_boilerplate/VehicleProp.js","components/vehicle_boilerplate/VehicleBase.js","components/vehicle_status/VehicleAtRisk.component.js","components/vehicle_status/VehicleActive.component.js","components/vehicle_status/VehicleInactive.component.js","components/vehicle_status/VehicleStatusTiles.component.js","components/VehicleStatus.component.js","components/Login.component.js","components/last_comm/VehicleLastComm.component.js","components/LastCommunications.component.js","components/analytics/analytics.js","components/Analytics.component.js","components/AddUser.component.js","components/TaPage/RemoveVehicles.component.js","components/TaPage.component.js","App.js","index.js"],"names":["Navbar","className","to","Component","Footer","id","VehicleRow","Vehicle","props","Number","vehicle","new_latitude","toFixed","vehicle_unit","new_longitude","typeClass","typeText","getActiveTime","isAtRisk","riskClass","riskText","getAtRiskTime","getNearestVehicle","convertTime","date1","diff_in_milliseconds","Math","abs","Date","now","seconds","parseInt","floor","minutes","hours","VehicleBase","getData","axios","get","vehicleQuery","then","res","setState","vehicles","data","console","log","intervalID","setTimeout","bind","catch","err","getInactiveTime","state","nearest_vehicle","this","interval","setInterval","time","clearInterval","clearTimeout","timeout","startup_time","last_received_time","nearest","closest_distance","total_close_vehicles","distance_to_vehicles","length","j","distance","VehicleAtRisk","getAtRiskVehicles","map","currentVehicle","key","_id","VehicleActive","getActiveVehicles","VehicleInactive","getInactiveVehicles","isatRisk","VehicleStatusTiles","VehicleStatus","Login","onSubmitUsername","onSubmitPassword","validateLogin","users","username","password","event","target","value","preventDefault","login_info","post","window","location","href","alert","onSubmit","type","name","placeholder","onChange","OfflineVehicle","getOfflineVehicles","LastCommunications","Analytics","table","pastVelocityAvg","max_speed","Table","getAverageSpeed","renderTableData","AddUser","onChangeUserName","onChangeEmail","onChangePassword","onChangeFirstName","onChangeLastName","email","first_name","last_name","user","required","RemoveVehicles","removeVehicles","delete","onClick","TaPage","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb511d4b.chunk.js","sourcesContent":["/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for the navbar component.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-custom navbar-expand\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Home</Link>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/VehicleStatus\" className=\"nav-link\">Vehicle Status</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/LastCommunications\" className=\"nav-link\">Last Communications</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/Analytics\" className=\"nav-link\">Analytics</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/TaPage\" className=\"nav-link\">TA Page</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure for displaying\r\n* the footer.\r\n*/\r\n\r\nimport React from \"react\"\r\n\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div>\r\n            <footer id=\"footer\">Equipment Location Monitoring System - Base Unit</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure for a row of vehicles.\r\n*/\r\n\r\nimport React from \"react\"\r\n\r\n\r\n//This function is used to add formatting between vehicle cards\r\nfunction VehicleRow(){\r\n    return(\r\n        <div className=\"vehicle_status_rows\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleRow ","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the skeleton html code for a vehicle tile.\r\n*/\r\n\r\n\r\nimport React from \"react\"\r\n\r\nconst Vehicle = props => (\r\n    <div className=\"vehicle_status_column\">\r\n        <div className=\"vehicle_card\">\r\n            <div className=\"latitude\">\r\n                <p>Latitude</p>\r\n                {Number(props.vehicle.new_latitude).toFixed(4)}\r\n            </div>\r\n            <div className=\"unit\">\r\n                <p>Unit</p>\r\n                {props.vehicle.vehicle_unit}\r\n            </div>\r\n            <div className=\"longitude\">\r\n                <p>Longitude</p>\r\n                {Number(props.vehicle.new_longitude).toFixed(4)}\r\n            </div>\r\n            <div className={props.typeClass}>\r\n                {props.typeText}\r\n                {props.getActiveTime(props.vehicle)}\r\n            </div>\r\n            {props.isAtRisk &&\r\n            <div className={props.riskClass}>\r\n                {props.riskText}\r\n                {props.getAtRiskTime(props.vehicle)}\r\n            </div>}\r\n            <div className=\"nearest_vehicle\">\r\n                Nearest vehicle: \r\n                {props.getNearestVehicle(props.vehicle)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n    \r\nexport default Vehicle;\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains some basic components that every vehicle\r\n* tile will possess. \r\n*/\r\n\r\n\r\nimport React, { Component } from \"react\"\r\nimport axios from 'axios'\r\nimport Vehicle from \"./VehicleProp.js\"\r\n\r\nfunction convertTime(date1){\r\n    //Convert dates into javascript readable date format and\r\n    //get difference between dates/times in milliseconds\r\n    var diff_in_milliseconds = Math.abs(new Date(date1) - new Date(Date.now()));\r\n\r\n    //Get milliseconds, seconds, minutes, and hours\r\n    var milliseconds = parseInt((diff_in_milliseconds % 1000) / 100);\r\n    var seconds = Math.floor((diff_in_milliseconds / 1000) % 60);\r\n    var minutes = Math.floor((diff_in_milliseconds / (1000 * 60)) % 60);\r\n    var hours = Math.floor((diff_in_milliseconds / (1000 * 60 * 60)) % 24);\r\n\r\n    //To format single digit hours with a \"0\" \r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return hours + \":\" + minutes + \":\" + seconds;\r\n}\r\n\r\nexport default class VehicleBase extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.getAtRiskTime = this.getAtRiskTime.bind(this);\r\n        this.getInactiveTime = this.getInactiveTime.bind(this);\r\n        this.state={vehicles: [], nearest_vehicle: 0}\r\n        this.vehicleQuery = 'https://elms-base-application.uc.r.appspot.com/vehicles'\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getData()\r\n        this.interval = setInterval(() => (this.setState({time: Date.now()}), 1000));\r\n\r\n    }\r\n    getData = () => {\r\n        axios.get(this.vehicleQuery)\r\n        .then(res => {\r\n            this.setState({vehicles: res.data})\r\n            console.log(res.data);\r\n            this.intervalID = setTimeout(this.getData.bind(this), 5000);\r\n\r\n        })\r\n        \r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    getActiveTime(vehicle){\r\n        var date1 = vehicle.startup_time;\r\n        return convertTime(date1)\r\n    }\r\n    getInactiveTime(vehicle){\r\n        var date1 = vehicle.last_received_time;\r\n        return convertTime(date1)\r\n    }\r\n    getAtRiskTime(vehicle){\r\n        var date1 = vehicle.last_received_time;\r\n        return convertTime(date1)\r\n    }\r\n    //set nearest vehicle\r\n    getNearestVehicle(vehicle){\r\n        var nearest = 0;\r\n        var closest_distance = 10000;\r\n        var total_close_vehicles = vehicle.distance_to_vehicles.length;\r\n        for(var j = 0; j < total_close_vehicles; j++){\r\n            if(vehicle.distance_to_vehicles[j].distance < closest_distance){\r\n                closest_distance = vehicle.distance_to_vehicles[j].distance;\r\n                nearest = vehicle.distance_to_vehicles[j].vehicle_unit;\r\n            }\r\n        }\r\n        return nearest;\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the vehicle at risk tiles.\r\n*/\r\n\r\nimport React, { Component } from \"react\"\r\nimport Vehicle from \"../vehicle_boilerplate/VehicleProp.js\"\r\nimport VehicleBase from \"../vehicle_boilerplate/VehicleBase\"\r\n\r\n//class used to render vehicles at risk\r\nexport default class VehicleAtRisk extends VehicleBase{\r\n    constructor(props){\r\n        super(props);\r\n        this.getAtRiskVehicles = this.getAtRiskVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.getAtRiskTime = this.getAtRiskTime.bind(this);\r\n        this.state={vehicles: []}\r\n        this.vehicleQuery = 'https://elms-base-application.uc.r.appspot.com/vehicles/at_risk'\r\n\r\n    }\r\n\r\n    //get list of at risk vehicles with nearest vehicle, active time, and risk time\r\n    getAtRiskVehicles(){\r\n        return this.state.vehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} typeClass=\"active_time\" typeText=\"Active time: \" riskClass=\"at_risk_time\"\r\n            isAtRisk={true} riskText=\"At risk time: \" getActiveTime={this.getActiveTime} getAtRiskTime={this.getAtRiskTime} key={currentVehicle._id}/>;\r\n        })\r\n    }\r\n\r\n    //Render the page with header of at risk and cards of vehicles at risk\r\n    render(){\r\n        return(\r\n            <div className=\"at_risk\">\r\n                <hr className=\"at_risk_line\"/>\r\n                    <p className=\"at_risk_text\">At Risk</p>\r\n                <hr className=\"at_risk_line\"/>\r\n                { this.getAtRiskVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the vehicle active tiles.\r\n*/\r\n\r\nimport React, { Component } from \"react\"\r\nimport Vehicle from \"../vehicle_boilerplate/VehicleProp.js\"\r\nimport VehicleBase from \"../vehicle_boilerplate/VehicleBase\"\r\n\r\n//class used to render active vehicles\r\nexport default class VehicleActive extends VehicleBase{\r\n    constructor(props){\r\n        super(props);\r\n        this.getActiveVehicles = this.getActiveVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n\r\n        this.state={vehicles: []}\r\n        this.vehicleQuery = 'https://elms-base-application.uc.r.appspot.com/vehicles/active' // this will be used in the base class query\r\n    }\r\n    //return the list of active vehicles with: nearest vehicle, active time\r\n    getActiveVehicles(){\r\n        return this.state.vehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} isAtRisk={false}\r\n            getActiveTime={this.getActiveTime} key={currentVehicle._id} typeClass=\"active_time\" typeText=\"Active time: \"/>;\r\n        })\r\n    }\r\n    //Render the page with header of active and cards of vehicles active\r\n    render(){\r\n        return(\r\n            <div className=\"active\">\r\n                <hr className=\"active_line\"/>\r\n                    <p className=\"active_text\">Active</p>\r\n                <hr className=\"active_line\"/>\r\n                { this.getActiveVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the vehicle inactive tiles.\r\n*/\r\n\r\nimport React, { Component } from \"react\"\r\nimport Vehicle from \"../vehicle_boilerplate/VehicleProp.js\"\r\nimport VehicleBase from \"../vehicle_boilerplate/VehicleBase\"\r\n\r\n//class used to render inactive vehicles\r\nexport default class VehicleInactive extends VehicleBase{\r\n    constructor(props){\r\n        super(props)\r\n        this.getInactiveVehicles = this.getInactiveVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getInactiveTime = this.getInactiveTime.bind(this);\r\n        this.state={vehicles: []}\r\n        this.vehicleQuery = 'https://elms-base-application.uc.r.appspot.com/vehicles/inactive'\r\n    }\r\n\r\n    //get list of inactive vehicles with nearest vehicle and inactive time\r\n    getInactiveVehicles(){\r\n        return this.state.vehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} getActiveTime={this.getInactiveTime} key={currentVehicle._id}\r\n            isatRisk={false} typeClass=\"active_time\" typeText=\"Inactive time: \" />;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"inactive\">\r\n                <hr className=\"inactive_line\"/>\r\n                    <p className=\"inactive_text\">Inactive</p>\r\n                <hr className=\"inactive_line\"/>\r\n                { this.getInactiveVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure for displaying the \r\n* vehicle status page.\r\n*/\r\n\r\nimport React from \"react\"\r\nimport VehicleRow from \"./VehicleRow.component\"\r\nimport VehicleAtRisk from \"./VehicleAtRisk.component\"\r\nimport VehicleActive from \"./VehicleActive.component\"\r\nimport VehicleInactive from \"./VehicleInactive.component\"\r\n\r\n//Formats the vehicle status page. Takes in the vehicles at risk, active, and inactive\r\n//components and returns the order of rendering. \r\nfunction VehicleStatusTiles(){\r\n    return(\r\n        <div className=\"vehicle_status_tiles\">\r\n            <VehicleAtRisk />\r\n            <VehicleRow />\r\n            <VehicleActive />\r\n            <VehicleRow />\r\n            <VehicleInactive />\r\n            <VehicleRow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleStatusTiles","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure for displaying the vehicle status.\r\n*/\r\n\r\n\r\nimport React, { Component } from \"react\"\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\nimport VehicleStatusTiles from \"./vehicle_status/VehicleStatusTiles.component.js\"\r\n\r\n\r\nexport default class VehicleStatus extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"page-container\">\r\n                <Navbar />\r\n                <main>Vehicle Status</main>\r\n                <VehicleStatusTiles />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for the login component.\r\n*/\r\n\r\nimport React, { Component } from \"react\"\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Login extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onSubmitUsername = this.onSubmitUsername.bind(this);\r\n        this.onSubmitPassword = this.onSubmitPassword.bind(this);\r\n        this.validateLogin = this.validateLogin.bind(this);\r\n\r\n        this.state={\r\n            users: [],\r\n            username:'',\r\n            password:''\r\n        }\r\n        \r\n    }\r\n\r\n    //when page renders, get list of users in mongodb\r\n    componentDidMount(){\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/users')\r\n            .then(res => {\r\n                this.setState({ users: res.data})\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n    //set username entered\r\n    onSubmitUsername(event){\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    //set password entered\r\n    onSubmitPassword(event){\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    //function that validates username and password match what's in database.\r\n    validateLogin(event){\r\n        event.preventDefault();\r\n\r\n        \r\n        const login_info = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        console.log(login_info);\r\n        /*\r\n        const userListLength = this.state.users.length;\r\n        for(var i = 0; i < userListLength; i++){\r\n            if(this.state.username === this.state.users[i].username && this.state.password === this.state.users[i].password){\r\n                alert(\"Login success!\");\r\n                window.location = '/VehicleStatus';\r\n                break;\r\n            }else{\r\n                if(i === userListLength - 1){\r\n                    alert(\"Invalid login attempt!\");\r\n                }\r\n            }\r\n        }\r\n        */\r\n\r\n        axios.post('https://elms-base-application.uc.r.appspot.com/users/auth', login_info)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            window.location.href = \"/VehicleStatus\"\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            alert(\"Invalid login attempt!\");\r\n        });\r\n\r\n    }\r\n    //loginbox rendering\r\n    render() {\r\n        return(\r\n            <div className=\"login_parent\">\r\n                <div className=\"login_box\">\r\n                    <h2 className=\"login\">Base Login</h2>\r\n                    <form id=\"login_form\" className=\"login_form\" onSubmit={this.validateLogin}>\r\n                        <label className=\"user_name\">User Name: </label>\r\n                        <input  id=\"user_name\" \r\n                                type=\"text\" \r\n                                name=\"User Name\" \r\n                                placeholder=\"User Name\" \r\n                                onChange={this.onSubmitUsername}/>\r\n                        <label className=\"password\">Password: </label>\r\n                        <input  id=\"password\" \r\n                                type=\"password\" \r\n                                name=\"Password\" \r\n                                placeholder=\"************\"\r\n                                onChange={this.onSubmitPassword}/>\r\n                        <input type=\"submit\" value=\"Login\" id=\"Submit\" className=\"Submit\"/>\r\n                    </form>\r\n                    <div className=\"bottom_container\">\r\n                        <Link className=\"create_user\" to='/AddUser' >Create profile</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the offline\r\n* vehicles page.\r\n*/\r\n\r\nimport React, { Component } from \"react\"\r\nimport Vehicle from \"../vehicle_boilerplate/VehicleProp.js\"\r\nimport VehicleBase from \"../vehicle_boilerplate/VehicleBase\"\r\nimport VehicleRow from \"../vehicle_status/VehicleRow.component\"\r\n\r\n\r\nexport default class OfflineVehicle extends VehicleBase{\r\n    constructor(props){\r\n        super(props);\r\n        this.getOfflineVehicles = this.getOfflineVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.state={vehicles: [], nearest_vehicle: 0}\r\n        this.vehicleQuery = 'https://elms-base-application.uc.r.appspot.com/vehicles/offline'\r\n    }\r\n\r\n    //automatically get vehicle list and parse by status\r\n    getOfflineVehicles(){\r\n        if(this.state.vehicles.length > 0)\r\n        {\r\n            return this.state.vehicles.map(currentVehicle => {\r\n                return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} getActiveTime={this.getActiveTime} key={currentVehicle._id}\r\n                typeClass=\"active_time\" typeText=\"Offline time: \"/>;\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"vehicle_status_tiles\">\r\n                <div className=\"offline_vehicles\">\r\n                    <hr className=\"offline_vehicles_line\"/>\r\n                        <p className=\"offline_vehicles_text\">Offline</p>\r\n                    <hr className=\"offline_vehicles_line\"/>\r\n                    { this.getOfflineVehicles() }\r\n                </div>\r\n                <VehicleRow />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure of the offline\r\n* vehicles page.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\nimport VehicleLastComm from \"./last_comm/VehicleLastComm.component\"\r\n\r\n\r\nexport default class LastCommunications extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"page-container\">\r\n                <Navbar />\r\n                <main>Last Communications</main>\r\n                <VehicleLastComm />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the \r\n* analytics page.\r\n* \r\n* Utilized code from this source for building and stylizing table: \r\n* https://dev.to/abdulbasit313/an-easy-way-to-create-a-customize-dynamic-table-in-react-js-3igg\r\n*/\r\n\r\nimport React, { Component } from 'react'\r\nimport VehicleRow from \"../vehicle_status/VehicleRow.component\"\r\nimport axios from 'axios'\r\n\r\nconst Analytics = props => (\r\n        <tr>\r\n            <td>{props.table.vehicle_unit}</td>\r\n            <td>{props.table.pastVelocityAvg}</td>\r\n            <td>{props.table.max_speed}</td>\r\n            <td>{props.table.startup_time}</td>\r\n        </tr>\r\n\r\n)\r\n    \r\nexport class Table extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {table: []}\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/vehicles/analytics')\r\n        .then(res => {\r\n            this.setState({table: res.data})\r\n            console.log(res.data);\r\n\r\n        })\r\n        \r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n     renderTableData() {\r\n        console.log(this.state.table.max_speed)\r\n        return this.state.table.map(currentVehicle => {\r\n            return <Analytics table={currentVehicle} getAverageSpeed={this.pastVelocityAvg} max_speed={this.max_speed} startup_time={this.getActiveTime} key={currentVehicle._id}/>;\r\n        })\r\n     }\r\n\r\n  \r\n     render() {\r\n        return (\r\n           <div>\r\n            <table id='vehicles'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Vehicle #</th>\r\n                        <th>Average Speed</th>\r\n                        <th>Max Speed</th>\r\n                        <th>Startup date</th>\r\n                    </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    {this.renderTableData()}\r\n                </tbody>\r\n            </table>\r\n            <VehicleRow />\r\n           </div>\r\n        )\r\n     }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the structure for displaying\r\n* the analytics page.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\nimport {Table} from \"./analytics/analytics\"\r\n\r\n\r\nexport default class Analytics extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <main>Analytics</main>\r\n                <Table /> \r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for displaying the add user component.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\n\r\n//class used to create a user\r\nexport default class AddUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            email:'',\r\n            password:'',\r\n            first_name: '',\r\n            last_name: ''\r\n        }\r\n    }\r\n\r\n    //form submit, add username\r\n    onChangeUserName(event){\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeEmail(event){\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangePassword(event){\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeFirstName(event){\r\n        this.setState({\r\n            first_name: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeLastName(event){\r\n        this.setState({\r\n            last_name: event.target.value\r\n        });\r\n    }\r\n\r\n    //on submit form, create new user with input data\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name\r\n        }\r\n\r\n        axios.post('https://elms-base-application.uc.r.appspot.com/users/add', user)\r\n        .then(res => console.log(res.data));\r\n        this.setState({\r\n            username: '',\r\n            email:'',\r\n            password:'',\r\n            first_name: '',\r\n            last_name: ''\r\n        })\r\n        window.location.href = \"/\"\r\n\r\n    }\r\n    //form used to create a user\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <h3>Create User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUserName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input type=\"password\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>First Name: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.first_name}\r\n                        onChange={this.onChangeFirstName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.last_name}\r\n                        onChange={this.onChangeLastName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\"/> \r\n                    </div>\r\n                </form>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the code for handling the add vehicle component.\r\n*/\r\n\r\nimport React, { Component} from 'react';\r\nimport axios from 'axios'\r\n\r\n//class used to add vehicle and information\r\nexport default class RemoveVehicles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeVehicles = this.removeVehicles.bind(this)\r\n\r\n    }\r\n    removeVehicles() {\r\n        axios.delete('https://elms-base-application.uc.r.appspot.com/vehicles/deleteall')\r\n        .then(res => {\r\n            console.log(res.data);\r\n        })\r\n        \r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //form used for creating a vehicle\r\n    render(){\r\n        return (\r\n            <div className=\"deleteVehicle\">    \r\n                <div>\r\n                    <h3 className=\"deleteText\">Delete All Vehicles</h3>\r\n\r\n                </div>\r\n                <div className=\"deleteButton\">\r\n                    <button type=\"submit\" onClick={this.removeVehicles} className=\"btn btn-danger\">Delete All</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the Teacher Assistant Page\r\n* for database manipulation\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Navbar.component'\r\nimport RemoveVehicles from './TaPage/RemoveVehicles.component'\r\nimport Footer from \"./Footer.component.js\"\r\nimport VehicleRow from '../components/vehicle_status/VehicleRow.component'\r\n\r\nexport default class TaPage extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <main>TA Testing Page</main>\r\n                <RemoveVehicles />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file contains the root code for the ELMS web application.\r\n*/\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport VehicleStatus from './components/VehicleStatus.component';\r\nimport Login from './components/Login.component';\r\nimport LastCommunications from './components/LastCommunications.component';\r\nimport Analytics from './components/Analytics.component';\r\nimport AddUser from './components/AddUser.component';\r\nimport TaPage from './components/TaPage.component'\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n                <Route path='/' exact component={Login} />\r\n                <Route path='/VehicleStatus' component={VehicleStatus} />\r\n                <Route path='/LastCommunications' component={LastCommunications} />\r\n                <Route path='/Analytics' component={Analytics} />\r\n                <Route path='/AddUser' component={AddUser} />\r\n                <Route path='/TaPage' component={TaPage} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","/*\r\n* ELMS - Trevor Frame, Andrew Freitas, Deborah Kretzschmar\r\n*\r\n* This file crenders the file to the DOM.\r\n*/\r\n\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}