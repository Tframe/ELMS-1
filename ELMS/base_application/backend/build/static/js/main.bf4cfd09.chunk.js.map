{"version":3,"sources":["components/Navbar.component.js","components/Footer.component.js","components/MainContent.component.js","components/VehicleRow.component.js","components/VehicleAtRisk.component.js","components/VehicleActive.component.js","components/VehicleInactive.component.js","components/VehicleStatusTiles.component.js","components/VehicleStatus.component.js","components/Login.component.js","components/LastCommunications.component.js","components/Analytics.component.js","components/AddVehicle.component.js","components/AddUser.component.js","App.js","index.js"],"names":["Navbar","className","to","Component","Footer","id","MainContent","VehicleRow","Vehicle","props","vehicle","new_latitude","vehicle_unit","new_longitude","getActiveTime","at_risk_time","getNearestVehicle","VehicleAtRisk","getAtRiskVehicles","bind","state","vehicles","nearest_vehicle","axios","get","then","res","setState","data","console","log","catch","err","nearest","closest_distance","total_close_vehicles","distance_to_vehicles","length","j","distance","date1","startup_time","date2","last_received_time","diff_in_milliseconds","Math","abs","Date","milliseconds","parseInt","seconds","floor","minutes","hours","vehicle_list_length","this","atRiskVehicles","i","status","map","currentVehicle","key","_id","VehicleActive","getActiveVehicles","activeVehicles","VehicleInactive","getInactiveVehicles","inactiveVehicles","VehicleStatusTiles","VehicleStatus","Login","onSubmitUsername","onSubmitPassword","validateLogin","users","username","password","event","target","value","preventDefault","login_info","userListLength","alert","window","location","onSubmit","type","name","placeholder","onChange","LastCommunications","Analytics","AddVehicle","onChangeUnit","onChangeStartTime","onChangeLastReceivedTime","onChangeLastLongitude","onChangeLastLatitude","onChangePastVelocity","onChangePastBearing","onChangeNewTime","onChangenewLongitude","onChangeNewLatitude","onChangeNewVelocity","onChangeNewBearing","onChangeDistanceToVehicles","onChangeStatus","last_longitude","last_latitude","past_velocity","past_bearing","new_time","new_velocity","new_bearing","post","required","ref","AddUser","onChangeUserName","onChangeEmail","onChangePassword","onChangeFirstName","onChangeLastName","email","first_name","last_name","user","App","path","exact","component","CreateVehicle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf4cfd09.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Home</Link>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/VehicleStatus\" className=\"nav-link\">Vehicle Status</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/LastCommunications\" className=\"nav-link\">Last Communications</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/Analytics\" className=\"nav-link\">Analytics</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/AddVehicle\" className=\"nav-link\">Add Vehicle</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/AddUser\" className=\"nav-link\">Add User</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div>\r\n            <footer id=\"footer\">Equipment Monitoring Location System - Base Unit</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\n\r\nfunction MainContent(){\r\n    return(\r\n        <main>Vehicle Status</main>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React from \"react\"\r\n\r\n\r\n//This function will take in vehicle objects to send to\r\n//the vehicle card to then display the vehicle info\r\nfunction VehicleRow(){\r\n    return(\r\n        <div className=\"vehicle_status_rows\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleRow ","import React, { Component } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst Vehicle = props => (\r\n    <div className=\"vehicle_status_column\">\r\n        <div className=\"vehicle_card\">\r\n            <div className=\"latitude\">\r\n                <p>Latitude</p>\r\n                {props.vehicle.new_latitude}\r\n            </div>\r\n            <div className=\"unit\">\r\n                <p>Unit</p>\r\n                {props.vehicle.vehicle_unit}\r\n            </div>\r\n            <div className=\"longitude\">\r\n                <p>Longitude</p>\r\n                {props.vehicle.new_longitude}\r\n            </div>\r\n            <div className=\"active_time\">\r\n                Active time: \r\n                {props.getActiveTime(props.vehicle)}\r\n            </div>\r\n            <div className=\"at_risk_time\">\r\n                At risk time: \r\n                {props.vehicle.at_risk_time}\r\n            </div>\r\n            <div className=\"nearest_vehicle\">\r\n                Nearest vehicle: \r\n                {props.getNearestVehicle(props.vehicle)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default class VehicleAtRisk extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getAtRiskVehicles = this.getAtRiskVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.state={vehicles: [], nearest_vehicle: 0}\r\n    }\r\n\r\n    //automatically get vehicle list and parse by status\r\n    componentDidMount() {\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/vehicles/')\r\n        .then(res => {\r\n            this.setState({vehicles: res.data})\r\n            console.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //set nearest vehicle\r\n    getNearestVehicle(vehicle){\r\n        var nearest = 0;\r\n        var closest_distance = 10000;\r\n        var total_close_vehicles = vehicle.distance_to_vehicles.length;\r\n        for(var j = 0; j < total_close_vehicles; j++){\r\n            if(vehicle.distance_to_vehicles[j].distance < closest_distance){\r\n                closest_distance = vehicle.distance_to_vehicles[j].distance;\r\n                nearest = vehicle.distance_to_vehicles[j].vehicle_unit;\r\n            }\r\n        }\r\n        return nearest;\r\n    }\r\n\r\n    //get active time\r\n    getActiveTime(vehicle){\r\n        var date1 = vehicle.startup_time;\r\n        var date2 = vehicle.last_received_time;\r\n        //Convert dates into javascript readable date format and\r\n        //get difference between dates/times in milliseconds\r\n        var diff_in_milliseconds = Math.abs(new Date(date1) - new Date(date2));\r\n        \r\n        //Get milliseconds, seconds, minutes, and hours\r\n        var milliseconds = parseInt((diff_in_milliseconds % 1000) / 100);\r\n        var seconds = Math.floor((diff_in_milliseconds / 1000) % 60);\r\n        var minutes = Math.floor((diff_in_milliseconds / (1000 * 60)) % 60);\r\n        var hours = Math.floor((diff_in_milliseconds / (1000 * 60 * 60)) % 24);\r\n\r\n        //To format single digit hours with a \"0\" \r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n    }\r\n\r\n    //get list of at risk vehicles\r\n    getAtRiskVehicles(){\r\n        const vehicle_list_length = this.state.vehicles.length;\r\n        var atRiskVehicles = [];\r\n        var j = 0;\r\n        for(var i = 0; i < vehicle_list_length; i++){\r\n            if(this.state.vehicles[i].status === \"at_risk\"){\r\n                atRiskVehicles[j] = this.state.vehicles[i];\r\n                j++;\r\n            }\r\n        }\r\n        console.log(atRiskVehicles);\r\n        return atRiskVehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} getActiveTime={this.getActiveTime} key={currentVehicle._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"at_risk\">\r\n                <hr className=\"at_risk_line\"/>\r\n                    <p className=\"at_risk_text\">At Risk</p>\r\n                <hr className=\"at_risk_line\"/>\r\n                { this.getAtRiskVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst Vehicle = props => (\r\n    <div className=\"vehicle_status_column\">\r\n        <div className=\"vehicle_card\">\r\n            <div className=\"latitude\">\r\n                <p>Latitude</p>\r\n                {props.vehicle.new_latitude}\r\n            </div>\r\n            <div className=\"unit\">\r\n                <p>Unit</p>\r\n                {props.vehicle.vehicle_unit}\r\n            </div>\r\n            <div className=\"longitude\">\r\n                <p>Longitude</p>\r\n                {props.vehicle.new_longitude}\r\n            </div>\r\n            <div className=\"active_time\">\r\n                Active time: \r\n                {props.getActiveTime(props.vehicle)}\r\n            </div>\r\n            <div className=\"nearest_vehicle\">\r\n                Nearest vehicle: \r\n                {props.getNearestVehicle(props.vehicle)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default class VehicleActive extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getActiveVehicles = this.getActiveVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.state={vehicles: []}\r\n    }\r\n\r\n    //get list of vehicles\r\n    componentDidMount(){\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/vehicles/')\r\n        .then(res => {\r\n            this.setState({vehicles: res.data})\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //set nearest vehicle\r\n    getNearestVehicle(vehicle){\r\n        var nearest = 0;\r\n        var closest_distance = 10000;\r\n        var total_close_vehicles = vehicle.distance_to_vehicles.length;\r\n        for(var j = 0; j < total_close_vehicles; j++){\r\n            if(vehicle.distance_to_vehicles[j].distance < closest_distance){\r\n                closest_distance = vehicle.distance_to_vehicles[j].distance;\r\n                nearest = vehicle.distance_to_vehicles[j].vehicle_unit;\r\n            }\r\n        }\r\n        return nearest;\r\n    }\r\n\r\n    //get active time\r\n    getActiveTime(vehicle){\r\n        var date1 = vehicle.startup_time;\r\n        var date2 = vehicle.last_received_time;\r\n        //Convert dates into javascript readable date format and\r\n        //get difference between dates/times in milliseconds\r\n        var diff_in_milliseconds = Math.abs(new Date(date1) - new Date(date2));\r\n        \r\n        //Get milliseconds, seconds, minutes, and hours\r\n        var milliseconds = parseInt((diff_in_milliseconds % 1000) / 100);\r\n        var seconds = Math.floor((diff_in_milliseconds / 1000) % 60);\r\n        var minutes = Math.floor((diff_in_milliseconds / (1000 * 60)) % 60);\r\n        var hours = Math.floor((diff_in_milliseconds / (1000 * 60 * 60)) % 24);\r\n\r\n        //To format single digit hours with a \"0\" \r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n    }\r\n\r\n\r\n    //get list of inactive vehicles\r\n    getActiveVehicles(){\r\n        const vehicle_list_length = this.state.vehicles.length;\r\n        var activeVehicles = [];\r\n        var j = 0;\r\n        for(var i = 0; i < vehicle_list_length; i++){\r\n            if(this.state.vehicles[i].status === \"active\"){\r\n                activeVehicles[j] = this.state.vehicles[i];\r\n                j++;\r\n            }\r\n        }\r\n        console.log(activeVehicles);\r\n        return activeVehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} getActiveTime={this.getActiveTime} key={currentVehicle._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"active\">\r\n                <hr className=\"active_line\"/>\r\n                    <p className=\"active_text\">Active</p>\r\n                <hr className=\"active_line\"/>\r\n\r\n                { this.getActiveVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst Vehicle = props => (\r\n    <div className=\"vehicle_status_column\">\r\n        <div className=\"vehicle_card\">\r\n            <div className=\"latitude\">\r\n                <p>Latitude</p>\r\n                {props.vehicle.new_latitude}\r\n            </div>\r\n            <div className=\"unit\">\r\n                <p>Unit</p>\r\n                {props.vehicle.vehicle_unit}\r\n            </div>\r\n            <div className=\"longitude\">\r\n                <p>Longitude</p>\r\n                {props.vehicle.new_longitude}\r\n            </div>\r\n            <div className=\"active_time\">\r\n                Inactive time: \r\n                {props.getActiveTime(props.vehicle)}\r\n            </div>\r\n            <div className=\"nearest_vehicle\">\r\n                Nearest vehicle: \r\n                {props.getNearestVehicle(props.vehicle)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default class VehicleInactive extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.getInactiveVehicles = this.getInactiveVehicles.bind(this);\r\n        this.getNearestVehicle = this.getNearestVehicle.bind(this);\r\n        this.getActiveTime = this.getActiveTime.bind(this);\r\n        this.state={vehicles: []}\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/vehicles/')\r\n        .then(res => {\r\n            this.setState({vehicles: res.data})\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //set nearest vehicle\r\n    getNearestVehicle(vehicle){\r\n        var nearest = 0;\r\n        var closest_distance = 10000;\r\n        var total_close_vehicles = vehicle.distance_to_vehicles.length;\r\n        for(var j = 0; j < total_close_vehicles; j++){\r\n            if(vehicle.distance_to_vehicles[j].distance < closest_distance){\r\n                closest_distance = vehicle.distance_to_vehicles[j].distance;\r\n                nearest = vehicle.distance_to_vehicles[j].vehicle_unit;\r\n            }\r\n        }\r\n        return nearest;\r\n    }\r\n\r\n    //get inactive time\r\n    getActiveTime(vehicle){\r\n        \r\n        var date1 = new Date();\r\n        //var date1 = vehicle.startup_time;\r\n        var date2 = vehicle.last_received_time;\r\n\r\n        //Convert dates into javascript readable date format and\r\n        //get difference between dates/times in milliseconds\r\n        var diff_in_milliseconds = Math.abs(new Date(date1) - new Date(date2));\r\n        \r\n        //Get milliseconds, seconds, minutes, and hours\r\n        var milliseconds = parseInt((diff_in_milliseconds % 1000) / 100);\r\n        var seconds = Math.floor((diff_in_milliseconds / 1000) % 60);\r\n        var minutes = Math.floor((diff_in_milliseconds / (1000 * 60)) % 60);\r\n        var hours = Math.floor((diff_in_milliseconds / (1000 * 60 * 60)) % 24);\r\n\r\n        //To format single digit hours with a \"0\" \r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n    }\r\n\r\n    //get list of inactive vehicles\r\n    getInactiveVehicles(){\r\n        const vehicle_list_length = this.state.vehicles.length;\r\n        var inactiveVehicles = [];\r\n        var j = 0;\r\n        for(var i = 0; i < vehicle_list_length; i++){\r\n            if(this.state.vehicles[i].status === \"inactive\"){\r\n                inactiveVehicles[j] = this.state.vehicles[i];\r\n                j++;\r\n            }\r\n        }\r\n        console.log(inactiveVehicles);\r\n        return inactiveVehicles.map(currentVehicle => {\r\n            return <Vehicle vehicle={currentVehicle} getNearestVehicle={this.getNearestVehicle} getActiveTime={this.getActiveTime} key={currentVehicle._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"inactive\">\r\n                <hr className=\"inactive_line\"/>\r\n                    <p className=\"inactive_text\">Inactive</p>\r\n                <hr className=\"inactive_line\"/>\r\n                { this.getInactiveVehicles() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport VehicleRow from \"./VehicleRow.component\"\r\nimport VehicleAtRisk from \"./VehicleAtRisk.component\"\r\nimport VehicleActive from \"./VehicleActive.component\"\r\nimport VehicleInactive from \"./VehicleInactive.component\"\r\n\r\nfunction VehicleStatusTiles(){\r\n    return(\r\n        <div className=\"vehicle_status_tiles\">\r\n            <VehicleAtRisk />\r\n            <VehicleRow />\r\n            <VehicleActive />\r\n            <VehicleRow />\r\n            <VehicleInactive />\r\n            <VehicleRow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleStatusTiles","import React, { Component } from \"react\"\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\nimport MainContent from \"./MainContent.component.js\"\r\nimport VehicleStatusTiles from \"./VehicleStatusTiles.component.js\"\r\n\r\n\r\nexport default class VehicleStatus extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"page-container\">\r\n                <Navbar />\r\n                <MainContent />\r\n                <VehicleStatusTiles />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onSubmitUsername = this.onSubmitUsername.bind(this);\r\n        this.onSubmitPassword = this.onSubmitPassword.bind(this);\r\n        this.validateLogin = this.validateLogin.bind(this);\r\n\r\n        this.state={\r\n            users: [],\r\n            username:'',\r\n            password:''\r\n        }\r\n        \r\n    }\r\n\r\n    //when page renders, get list of users in mongodb\r\n    componentDidMount(){\r\n        axios.get('https://elms-base-application.uc.r.appspot.com/users/')\r\n            .then(res => {\r\n                this.setState({ users: res.data})\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n    //set username entered\r\n    onSubmitUsername(event){\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    //set password entered\r\n    onSubmitPassword(event){\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    validateLogin(event){\r\n        event.preventDefault();\r\n\r\n        const login_info = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        console.log(login_info);\r\n\r\n        const userListLength = this.state.users.length;\r\n        for(var i = 0; i < userListLength; i++){\r\n            if(this.state.username === this.state.users[i].username && this.state.password === this.state.users[i].password){\r\n                alert(\"Login success!\");\r\n                window.location = '/VehicleStatus';\r\n                break;\r\n            }else{\r\n                if(i === userListLength - 1){\r\n                    alert(\"Invalid login attempt!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"login_parent\">\r\n                <div className=\"login_box\">\r\n                    <h2 className=\"login\">Base Login</h2>\r\n                    <form id=\"login_form\" className=\"login_form\" onSubmit={this.validateLogin}>\r\n                        <label className=\"user_name\">User Name: </label>\r\n                        <input  id=\"user_name\" \r\n                                type=\"text\" \r\n                                name=\"User Name\" \r\n                                placeholder=\"User Name\" \r\n                                onChange={this.onSubmitUsername}/>\r\n                        <label className=\"password\">Password: </label>\r\n                        <input  id=\"password\" \r\n                                type=\"password\" \r\n                                name=\"Password\" \r\n                                placeholder=\"************\"\r\n                                onChange={this.onSubmitPassword}/>\r\n                        <input type=\"submit\" value=\"Login\" id=\"Submit\" className=\"Submit\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\n\r\n\r\n\r\nexport default class LastCommunications extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <p>Last Communications Components</p>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\n\r\n\r\nexport default class Analytics extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <p>Analytics Component</p>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\n\r\n\r\nexport default class AddVehicle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUnit = this.onChangeUnit.bind(this);\r\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\r\n        this.onChangeLastReceivedTime = this.onChangeLastReceivedTime.bind(this);\r\n        this.onChangeLastLongitude = this.onChangeLastLongitude.bind(this);\r\n        this.onChangeLastLatitude = this.onChangeLastLatitude.bind(this);\r\n        this.onChangePastVelocity = this.onChangePastVelocity.bind(this);\r\n        this.onChangePastBearing = this.onChangePastBearing.bind(this);\r\n        this.onChangeNewTime = this.onChangeNewTime.bind(this);\r\n        this.onChangenewLongitude = this.onChangenewLongitude.bind(this);\r\n        this.onChangeNewLatitude = this.onChangeNewLatitude.bind(this);\r\n        this.onChangeNewVelocity = this.onChangeNewVelocity.bind(this);\r\n        this.onChangeNewBearing = this.onChangeNewBearing.bind(this);\r\n        this.onChangeDistanceToVehicles = this.onChangeDistanceToVehicles.bind(this);\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            vehicle_unit: 0,\r\n            startup_time: new Date(),\r\n            last_received_time: new Date(),\r\n            last_longitude: 0,\r\n            last_latitude: 0,\r\n            past_velocity: [], \r\n            past_bearing: [],\r\n            new_time: new Date(),\r\n            new_longitude: 0,\r\n            new_latitude: 0,\r\n            new_velocity: 0,\r\n            new_bearing: 0,\r\n            distance_to_vehicles: [],\r\n            status: \"\"\r\n        }\r\n    }\r\n    \r\n    //form submit add unit number\r\n    onChangeUnit(event){\r\n        this.setState({\r\n            vehicle_unit: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeStartTime(event){\r\n        this.setState({\r\n            startup_time: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeLastReceivedTime(event){\r\n        this.setState({\r\n            last_received_time: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeLastLongitude(event){\r\n        this.setState({\r\n            last_longitude: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeLastLatitude(event){\r\n        this.setState({\r\n            last_latitude: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangePastVelocity(event){\r\n        this.setState({\r\n            past_velocity: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangePastBearing(event){\r\n        this.setState({\r\n            past_bearing: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeNewTime(event){\r\n        this.setState({\r\n            new_time: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangenewLongitude(event){\r\n        this.setState({\r\n            new_longitude: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeNewLatitude(event){\r\n        this.setState({\r\n            new_latitude: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeNewVelocity(event){\r\n        this.setState({\r\n            new_velocity: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeNewBearing(event){\r\n        this.setState({\r\n            new_bearing: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeDistanceToVehicles(event){\r\n        this.setState({\r\n            distance_to_vehicles: event.target.value\r\n        })\r\n    }\r\n    //form submit add unit number\r\n    onChangeStatus(event){\r\n        this.setState({\r\n            status: event.target.value\r\n        })\r\n    }\r\n\r\n    //on submit form, create new vehicle object with input data\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const vehicle = {\r\n            vehicle_unit: this.state.vehicle_unit,\r\n            startup_time: this.state.startup_time,\r\n            last_received_time: this.state.last_received_time,\r\n            last_longitude: this.state.last_longitude,\r\n            last_latitude: this.state.last_latitude,\r\n            past_velocity: [1.1, 2.1, this.state.past_velocity], \r\n            past_bearing: [1.2, 1.5, this.state.past_bearing],\r\n            new_time: this.state.new_time,\r\n            new_longitude: this.state.new_longitude,\r\n            new_latitude: this.state.new_latitude,\r\n            new_velocity: this.state.new_velocity,\r\n            new_bearing: this.state.new_bearing,\r\n            distance_to_vehicles: [\r\n                {\r\n                    vehicle_unit: 1,\r\n                    distance: 5\r\n                },\r\n                {\r\n                    vehicle_unit: 12,\r\n                    distance: this.state.distance_to_vehicles\r\n                }\r\n            ],\r\n            status: this.state.status\r\n        }\r\n\r\n        console.log(vehicle);\r\n        \r\n        axios.post('https://elms-base-application.uc.r.appspot.com/vehicles/add', vehicle)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            vehicle_unit: 0,\r\n            startup_time: new Date(),\r\n            last_received_time: new Date(),\r\n            last_longitude: 0,\r\n            last_latitude: 0,\r\n            past_velocity: [], \r\n            past_bearing: [],\r\n            new_time: new Date(),\r\n            new_longitude: 0,\r\n            new_latitude: 0,\r\n            new_velocity: 0,\r\n            new_bearing: 0,\r\n            distance_to_vehicles: [],\r\n            status: \"\"\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <h3>Create Vehicle</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Vehicle unit: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.vehicle_unit}\r\n                        onChange={this.onChangeUnit}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Startup Time: </label>\r\n                        <input type=\"datetime-local\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.startup_time}\r\n                        onChange={this.onChangeStartTime}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Received Time: </label>\r\n                        <input type=\"datetime-local\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.last_received_time}\r\n                        onChange={this.onChangeLastReceivedTime}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Longitude: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.last_longitude}\r\n                        onChange={this.onChangeLastLongitude}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Latitude: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.last_latitude}\r\n                        onChange={this.onChangeLastLatitude}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Past Velocity: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.past_velocity}\r\n                        onChange={this.onChangePastVelocity}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Past Bearing: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.past_bearing}\r\n                        onChange={this.onChangePastBearing}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Time: </label>\r\n                        <input type=\"datetime-local\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.new_time}\r\n                        onChange={this.onChangeNewTime}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Longitude: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.new_longitude}\r\n                        onChange={this.onChangenewLongitude}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Latitude: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.new_latitude}\r\n                        onChange={this.onChangeNewLatitude}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Velocity: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.new_velocity}\r\n                        onChange={this.onChangeNewVelocity}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Bearing: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.new_bearing}\r\n                        onChange={this.onChangeNewBearing}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Distance to Vehicle 12: </label>\r\n                        <input type=\"number\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.distance_to_vehicles}\r\n                        onChange={this.onChangeDistanceToVehicles}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Status: </label>\r\n                        <select ref=\"status\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.status}\r\n                        onChange={this.onChangeStatus}>\r\n                        <option >Select...</option>\r\n                        <option value=\"at_risk\">At risk</option>\r\n                        <option value=\"active\">Active</option>\r\n                        <option value=\"inactive\">Inactive</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-button\">\r\n                        <input type=\"submit\" value=\"Create Vehicle\" className=\"btn btn-primary\"/> \r\n                    </div>\r\n                </form>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport Navbar from './Navbar.component'\r\nimport Footer from \"./Footer.component.js\"\r\n\r\n\r\nexport default class AddUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            email:'',\r\n            password:'',\r\n            first_name: '',\r\n            last_name: ''\r\n        }\r\n    }\r\n\r\n    //form submit, add username\r\n    onChangeUserName(event){\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeEmail(event){\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangePassword(event){\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeFirstName(event){\r\n        this.setState({\r\n            first_name: event.target.value\r\n        });\r\n    }\r\n    //form submit, add username\r\n    onChangeLastName(event){\r\n        this.setState({\r\n            last_name: event.target.value\r\n        });\r\n    }\r\n\r\n    //on submit form, create new user with input data\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name\r\n        }\r\n\r\n        console.log(user);\r\n\r\n        axios.post('https://elms-base-application.uc.r.appspot.com/users/add', user)\r\n        .then(res => console.log(res.data));\r\n\r\n        \r\n        this.setState({\r\n            username: '',\r\n            email:'',\r\n            password:'',\r\n            first_name: '',\r\n            last_name: ''\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <h3>Create User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUserName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input type=\"password\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>First Name: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.first_name}\r\n                        onChange={this.onChangeFirstName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name: </label>\r\n                        <input type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.last_name}\r\n                        onChange={this.onChangeLastName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\"/> \r\n                    </div>\r\n                </form>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport VehicleStatus from './components/VehicleStatus.component';\r\nimport Login from './components/Login.component';\r\nimport LastCommunications from './components/LastCommunications.component';\r\nimport Analytics from './components/Analytics.component';\r\nimport CreateVehicle from './components/AddVehicle.component';\r\nimport AddUser from './components/AddUser.component';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n                <Route path='/' exact component={Login} />\r\n                <Route path='/VehicleStatus' component={VehicleStatus} />\r\n                <Route path='/LastCommunications' component={LastCommunications} />\r\n                <Route path='/Analytics' component={Analytics} />\r\n                <Route path='/AddVehicle' component={CreateVehicle} />\r\n                <Route path='/AddUser' component={AddUser} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}